---
notifications:
  email: false

sudo: required

env:
  - distribution: ubuntu
    version: xenial
    ansible_extra_vars: "'atom_flush_data=yes atom_populate_index=no test_vars_file=test_vars_ubuntu.yml'"
#  - distribution: ubuntu
#    version: trusty
#  - distribution: centos
#    version: 7

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v --extra-vars "${ansible_extra_vars}" /etc/ansible/roles/role_under_test/travis/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v --extra-vars "${ansible_extra_vars}" /etc/ansible/roles/role_under_test/travis/test.yml'

  ## skipping idempotence tests for now
  # - >
  #   sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/clamav_role/travis/test.yml
  #   | grep -q 'changed=0.*failed=0'
  #   && (echo 'Idempotence test: pass' && exit 0)
  #   || (echo 'Idempotence test: fail' && exit 1)

  # Check if the site is up
  - >
    sudo docker exec "$(cat ${container_id})" curl "http://localhost"
    && (echo 'OK: curl to localhost returned 0' && exit 0)
    || (echo 'Error: curl to localhost returned error' && exit 1)

  - 'sudo docker rm -f "$(cat ${container_id})"'
